# name: test/sql/test_extent.test
# description: ST_EXTENT test
# group: [sql]

statement ok
LOAD 'build/release/extension/geo/geo.duckdb_extension';

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE dbscan_inputs (id int, geo geography)

statement ok
INSERT INTO dbscan_inputs VALUES (0, 'POINT EMPTY'),(1, 'POINT (0 0)'),(2, 'POINT (1 1)'),(3, 'POINT (-0.5 0.5)'),(4, 'POINT (1 0)'),(5, 'POINT (0 1)'),(6, 'POINT (1.0 0.5)')

query II
SELECT id, ST_ASTEXT(geo) from dbscan_inputs
----
0	POINT EMPTY
1	POINT(0 0)
2	POINT(1 1)
3	POINT(-0.5 0.5)
4	POINT(1 0)
5	POINT(0 1)
6	POINT(1 0.5)

query III
SELECT id, ST_ASTEXT(geo) as geom_text, ST_CLUSTERDBSCAN(geo, 1e5, 1) over () as m from dbscan_inputs
----
0	POINT EMPTY	NULL
1	POINT(0 0)	NULL
2	POINT(1 1)	NULL
3	POINT(-0.5 0.5)	NULL
4	POINT(1 0)	NULL
5	POINT(0 1)	NULL
6	POINT(1 0.5)	NULL


query II
SELECT id, ST_CLUSTERDBSCAN(geo, 0.6, 1) over (order by id desc rows between 3 preceding and current row) as m from dbscan_inputs
----
6	0
5	1
4	2
3	3
2	3
1	3
0	NULL

statement ok
INSERT INTO dbscan_inputs VALUES (7, 'POINT EMPTY'),(8, 'MULTIPOINT(1 1, 2 2, 4 4, 5 2)'),(9, 'POINT(14 15)'),(10, 'LINESTRING(40 1, 42 34, 44 39)'),(11, 'POLYGON((40 2, 40 1, 41 2, 40 2))')

query III
SELECT id, ST_ASTEXT(geo) as geom_text, ST_CLUSTERDBSCAN(geo, 1e5, 1) over () as m from dbscan_inputs
----
0	POINT EMPTY	NULL
1	POINT(0 0)	NULL
2	POINT(1 1)	NULL
3	POINT(-0.5 0.5)	NULL
4	POINT(1 0)	NULL
5	POINT(0 1)	NULL
6	POINT(1 0.5)	NULL
7	POINT EMPTY	NULL
8	MULTIPOINT(1 1,2 2,4 4,5 2)	NULL
9	POINT(14 15)	NULL
10	LINESTRING(40 1,42 34,44 39)	NULL
11	POLYGON((40 2,40 1,41 2,40 2))	NULL

query II
SELECT id, ST_CLUSTERDBSCAN(geo, 0.6, 1) over (order by id desc rows between 3 preceding and current row) as m from dbscan_inputs
----
11	0
10	0
9	1
8	2
7	NULL
6	2
5	2
4	2
3	3
2	3
1	3
0	NULL
