# name: test/sql/test_makepolygon.test
# description: ST_MAKEPOLYGON test
# group: [sql]

statement ok
LOAD 'build/release/extension/geo/geo.duckdb_extension';

statement ok
PRAGMA enable_verification

# test basic 2D make POLYGON
query I
SELECT ST_MakePolygon( 'LINESTRING(75.15 29.53 1,77 29 1,77.6 29.5 1, 75.15 29.53 1)')
----
01030000A0E610000001000000040000009A99999999C9524048E17A14AE873D40000000000000F03F00000000004053400000000000003D40000000000000F03F66666666666653400000000000803D40000000000000F03F9A99999999C9524048E17A14AE873D40000000000000F03F

# test make polygon from line and array of holes
query I
SELECT ST_MakePolygon('LINESTRING (0 0, 0 50, 150 50, 150 0, 0 0)', ['LINESTRING(20 20, 50 20, 50 50, 20 50, 20 20)'::GEOGRAPHY, 'LINESTRING (90 90, 90 80, 110 80, 110 90, 90 90)'::GEOGRAPHY])
----


# test basic 3D make polygon
query I
SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53 1,77 29 1,77.6 29.5 1, 75.15 29.53 1)'));
----
01030000A0E610000001000000040000009A99999999C9524048E17A14AE873D40000000000000F03F00000000004053400000000000003D40000000000000F03F66666666666653400000000000803D40000000000000F03F9A99999999C9524048E17A14AE873D40000000000000F03F

# test invalid with inputs are POINT
#statement error
#SELECT ST_MAKEPOLYGON('POINT(5 6)')

# test invalid with hole is not line
statement error
SELECT ST_MakePolygon('LINESTRING (0 0, 0 150, 150 150, 150 0, 0 0)', ['POINT(5 6)'::GEOGRAPHY, 'LINESTRING(20 20, 50 20, 50 50, 20 50, 20 20)'::GEOGRAPHY, 'LINESTRING (90 100, 90 80, 110 80, 110 100, 90 100)'::GEOGRAPHY])

# test with inputs are holes outsize of polygon
query I
SELECT ST_MakePolygon('LINESTRING (0 0, 0 50, 150 50, 150 0, 0 0)', ['LINESTRING(20 20, 50 20, 150 50, 20 50, 20 20)'::GEOGRAPHY, 'LINESTRING (90 90, 90 80, 110 80, 110 90, 90 90)'::GEOGRAPHY])
----
0103000020E6100000030000000500000000000000000000000000000000000000000000000000000000000000000049400000000000C0624000000000000049400000000000C062400000000000000000000000000000000000000000000000000500000000000000000034400000000000003440000000000000494000000000000034400000000000C06240000000000000494000000000000034400000000000004940000000000000344000000000000034400500000000000000008056400000000000805640000000000080564000000000000054400000000000805B4000000000000054400000000000805B40000000000080564000000000008056400000000000805640

query I
SELECT ST_ASTEXT(ST_MAKEPOLYGON(ST_MakeLine(ARRAY[ST_MakePoint(-1.1, 1.1),ST_MakePoint(1.1, 1.1),ST_MakePoint(1.1, -1.1),ST_MakePoint(-1.1, -1.1),ST_MakePoint(-1.1, 1.1)])))
----
POLYGON((-1.1 1.1,1.1 1.1,1.1 -1.1,-1.1 -1.1,-1.1 1.1))

# test invalid NOT LINE inputs
#statement error
#SELECT ST_MAKEPOLYGON('POINT(5 6)', ['POLYGON((175 150, 20 40,50 60, 125 100, 175 150))'::GEOGRAPHY])

# test invalid decodes
statement error
SELECT ST_MAKEPOLYGON('POINT(5 6)', ['a'])

# test invalid parameters
statement error
SELECT ST_MAKEPOLYGON(5, 6)

# test invalid LINE inputs have at least 4 points
statement error
SELECT ST_MAKEPOLYGON('LINESTRING (0 0, 0 150)')

# test invalid hole inputs have at least 4 points
statement error
SELECT ST_MAKEPOLYGON('LINESTRING (0 0, 0 150, 150 150, 150 0, 0 0)', ['LINESTRING(20 20, 50 20, 50 50, 20 50)'::GEOGRAPHY])

# test invalid LINE inputs not closed
statement error
SELECT ST_MAKEPOLYGON('LINESTRING(20 20, 50 20, 50 50, 20 50)'::GEOGRAPHY)

# test invalid hole inputs not closed
statement error
SELECT ST_MAKEPOLYGON('LINESTRING (0 0, 0 150, 150 150, 150 0, 0 0)', ['LINESTRING(20 20, 50 20, 50 50, 20 50, 20 21)'::GEOGRAPHY])

# test make polygon with lines table 
statement ok
CREATE TABLE tbl_lines(p1 Geography, p2 Geography, p3 Geography)

statement ok
INSERT INTO tbl_lines VALUES (ST_MakeLine([ST_MakePoint(1,2), ST_MakePoint(3,4), ST_MakePoint(6,3), ST_MakePoint(1,2)]), ST_MAKELINE('POINT(5 6)', 'LINESTRING(5 1, 2 0, 3 4, 5 6)'), ST_MAKELINE([ST_MakePoint(1,2), ST_MakePoint(3,4), ST_MakePoint(10,14), ST_MakePoint(1,2)])),('LINESTRING (0 0, 0 10, 15 10, 15 0, 0 0)', 'LINESTRING(20 20, 50 20, 50 50, 20 50, 20 20)', 'LINESTRING (90 90, 90 80, 110 80, 110 90, 90 90)')

query R
SELECT ST_MAKEPOLYGON(p1) from tbl_lines
----
0103000020E61000000100000004000000000000000000F03F00000000000000400000000000000840000000000000104000000000000018400000000000000840000000000000F03F0000000000000040
0103000020E6100000010000000500000000000000000000000000000000000000000000000000000000000000000024400000000000002E4000000000000024400000000000002E40000000000000000000000000000000000000000000000000

query R
SELECT ST_ASTEXT(ST_MAKEPOLYGON(p1)) from tbl_lines
----
POLYGON((1 2,3 4,6 3,1 2))
POLYGON((0 0,0 10,15 10,15 0,0 0))

#test make polygon with null value 
#statement ok
#DELETE FROM tbl_lines

statement ok
INSERT INTO tbl_lines VALUES ('LINESTRING(1 1,2 2,2 3.5,1 3,1 2,1 1)'::GEOGRAPHY, 'LINESTRING(0 0, 1 1 ,2 3, 2 1, 0 0)'::GEOGRAPHY, 'LINESTRING(5 1, 2 0, -1 2, 5 1)'::GEOGRAPHY)

query R
SELECT ST_MAKEPOLYGON(p1) from tbl_lines
----
0103000020E61000000100000004000000000000000000F03F00000000000000400000000000000840000000000000104000000000000018400000000000000840000000000000F03F0000000000000040
0103000020E6100000010000000500000000000000000000000000000000000000000000000000000000000000000024400000000000002E4000000000000024400000000000002E40000000000000000000000000000000000000000000000000
0103000020E61000000100000006000000000000000000F03F000000000000F03F0000000000000040000000000000004000000000000000400000000000000C40000000000000F03F0000000000000840000000000000F03F0000000000000040000000000000F03F000000000000F03F

query R
SELECT ST_ASTEXT(ST_MAKEPOLYGON(p1)) from tbl_lines
----
POLYGON((1 2,3 4,6 3,1 2))
POLYGON((0 0,0 10,15 10,15 0,0 0))
POLYGON((1 1,2 2,2 3.5,1 3,1 2,1 1))

# test with one hole
query R
SELECT ST_MAKEPOLYGON(p1, [p2]) from tbl_lines
----
0103000020E61000000200000004000000000000000000F03F00000000000000400000000000000840000000000000104000000000000018400000000000000840000000000000F03F000000000000004005000000000000000000144000000000000018400000000000001440000000000000F03F000000000000004000000000000000000000000000000840000000000000104000000000000014400000000000001840
0103000020E6100000020000000500000000000000000000000000000000000000000000000000000000000000000024400000000000002E4000000000000024400000000000002E40000000000000000000000000000000000000000000000000050000000000000000003440000000000000344000000000000049400000000000003440000000000000494000000000000049400000000000003440000000000000494000000000000034400000000000003440
0103000020E61000000200000006000000000000000000F03F000000000000F03F0000000000000040000000000000004000000000000000400000000000000C40000000000000F03F0000000000000840000000000000F03F0000000000000040000000000000F03F000000000000F03F0500000000000000000000000000000000000000000000000000F03F000000000000F03F000000000000004000000000000008400000000000000040000000000000F03F00000000000000000000000000000000

query R
SELECT ST_ASTEXT(ST_MAKEPOLYGON(p1, [p2])) from tbl_lines
----
POLYGON((1 2,3 4,6 3,1 2),(5 6,5 1,2 0,3 4,5 6))
POLYGON((0 0,0 10,15 10,15 0,0 0),(20 20,50 20,50 50,20 50,20 20))
POLYGON((1 1,2 2,2 3.5,1 3,1 2,1 1),(0 0,1 1,2 3,2 1,0 0))

# test with two holes
query R
SELECT ST_ASTEXT(ST_MAKEPOLYGON(p1, [p2, p3])) from tbl_lines
----
POLYGON((1 2,3 4,6 3,1 2),(5 6,5 1,2 0,3 4,5 6),(1 2,3 4,10 14,1 2))
POLYGON((0 0,0 10,15 10,15 0,0 0),(20 20,50 20,50 50,20 50,20 20),(90 90,90 80,110 80,110 90,90 90))
POLYGON((1 1,2 2,2 3.5,1 3,1 2,1 1),(0 0,1 1,2 3,2 1,0 0),(5 1,2 0,-1 2,5 1))

# invalid input for holes
statement error
SELECT ST_ASTEXT(ST_MAKEPOLYGON(p1, [p2, p3, 'LINESTRING(1 2, 3 4)'])) from tbl_lines
